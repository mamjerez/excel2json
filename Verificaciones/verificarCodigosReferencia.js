const config = require('../config');

function verificarCodigosReferencia() {
    console.log('=== VERIFICACI√ìN C√ìDIGOS DE REFERENCIA ===');
    console.log('Configuraci√≥n:');
    console.log('- Ruta datos JSON:', config.pathDataJsonNecesarios);
    
    const rutaArchivoReferencia = config.pathDataJsonNecesarios + 'gastosEconomicaEconomicos.json';
    console.log('- Archivo referencia completo:', rutaArchivoReferencia);
    
    try {
        const rutaArchivoReferencia = config.pathDataJsonNecesarios + 'gastosEconomicaEconomicos.json';
        const gastosEconomicaEconomicos = require(rutaArchivoReferencia);
        
        console.log('Total c√≥digos econ√≥micos de referencia:', gastosEconomicaEconomicos.length);
        
        // Buscar el c√≥digo 78900
        const codigo78900 = gastosEconomicaEconomicos.find(eco => eco.CodEco === 78900);
        
        if (codigo78900) {
            console.log('‚úÖ C√≥digo 78900 EXISTE en c√≥digos de referencia:');
            console.log(codigo78900);
            console.log('üîç RAZ√ìN: Como ya existe en referencia, NO aparecer√° como c√≥digo nuevo');
        } else {
            console.log('‚ùå C√≥digo 78900 NO EXISTE en c√≥digos de referencia');
            console.log('üîç ESTO SIGNIFICA: Si est√° en Excel, S√ç deber√≠a aparecer como c√≥digo nuevo');
        }
        
        // Mostrar c√≥digos cercanos para comparar
        const codigosCercanos = gastosEconomicaEconomicos
            .filter(eco => eco.CodEco >= 78800 && eco.CodEco <= 79000)
            .sort((a, b) => a.CodEco - b.CodEco);
        
        console.log('C√≥digos cercanos en referencia (78800-79000):', codigosCercanos.length, 'encontrados');
        if (codigosCercanos.length > 0) {
            console.log('Primeros 5:', codigosCercanos.slice(0, 5));
        }
        
        // Mostrar estructura del primer elemento
        if (gastosEconomicaEconomicos.length > 0) {
            console.log('Estructura de referencia (primer elemento):', gastosEconomicaEconomicos[0]);
        }
        
        // Buscar todos los c√≥digos que empiecen por 789
        const codigos789 = gastosEconomicaEconomicos
            .filter(eco => eco.CodEco && eco.CodEco.toString().startsWith('789'))
            .sort((a, b) => a.CodEco - b.CodEco);
        
        console.log('C√≥digos de referencia que empiezan por 789:', codigos789);
        
    } catch (error) {
        console.error('Error al leer archivo de c√≥digos de referencia:', error);
        console.log('Verifica que existe el archivo:', config.pathDataJsonNecesarios + 'gastosEconomicaEconomicos.json');
    }
}

verificarCodigosReferencia();
